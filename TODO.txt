- Now imagine three vertices of an equilateral triangle on a sphere. A ray from the origin through the triangle will hit exactly one point on the sphere. 
  That point on the sphere will have a normal, and we can use this to make the triangle into a normal map. 
- When the user hits the n key, I want you to draw the scene with a light source 5 units above the viewing position, 
  where the icosahedron is a shiny red material and where the normals used come from the normal map. 
- Finally, I want you to create a background image for cube map purposes. 
- If the user hits the c key, I want you to render the scene with the icosahedron now made of a shiny silver material with its usual normals (i.e., not coming from a normal map). 
  The cube map should be used to draw for the background and reflections on this surface.

Point Breakdown

Code contributed to existing project is well-documented and follows the SJSU CS Department guidelines for C++ (Undergrad version). (2pts)
Two paper summaries (1pt each) (Grad Version) (2pts)

GLUT handling of n and c keys. (1pt each)
When the n key is hit, this icosahedron is drawn with a red shiny material and lighting as described (1pt)
Normals for this rendering come from a normal map as described (1pt)
When the c key is hit, the scene is drawn using a cube map (1pt)
The icosahedron now uses a silver shiny material on which one can see reflections from the cube map (1pt)